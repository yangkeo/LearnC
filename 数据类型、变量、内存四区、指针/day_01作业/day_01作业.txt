1，数据类型的本质是什么？（从编译器的角度考虑）
     
     1），数据类型的本质是固定内存大小的别名。
     2），类型的作用：编译预算对象（变量）分配的内存空间的大小。

2，如何为一个数据类型起别名？
     
     使用typedef关键字；
     typedef常搭配结构体使用；
     例如定义以下结构体：typedef struct Mystruct
                {
                    int a;
                    int b;
                }TMP;
                之后定义该结构体是只需 TMP m3；就行。

3，既然有栈空间，为何要有堆空间？栈空间由谁分配和回收？堆空间由谁分配和回收？
     
     栈空间定义的是函数的参数、局部变量的值等，只在函数内部使用，由编译器分配和
     释放。堆空间由开发者使用malloc()；函数手动分配空间并定义大小，当程序结束时可
     使用free();函数手动释放。（............）

4, 有一个函数，数组做函数参数

     void printf_array(int a[128])
      {
         //sizeof(a) = ?
      }
       答案为 512；

5，有一个数组，如何求出元素个数
     int main(void)
     {
        int a[] = {1, 5, 7, 0, 10, 7, 3};
     }

      int main(void)
     {
        int a[] = {1, 5, 7, 0, 10, 7, 3};
        int i = 0;
        int n = 0;
        int b = 0;
        n = sizeof(a)/sizeof(a[0]);
        for(i = 0,;i<n; i++)
        {
            if(a[i] != 0)
              {
                 b++;
              }
        }
       return 0; 
    }
    (题干表述不清......................)

6， 在32位平台上

      char ***************p = NULL;
      int *q = NULL;
      sizeof(p) = ?
      sizeof(q) = ?
      答案：在32位平台下，任何类型的指针变量都只占4个字节。